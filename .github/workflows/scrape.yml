name: Scrape and Save Page

# Trigger workflow manually with a target URL input
on:
  workflow_dispatch:
    inputs:
      target_url:
        description: 'Target URL to scrape'
        required: true
        type: string

# Define job for scraping
jobs:
  scrape-page:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to latest version
      
      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4 # Updated to latest version
        with:
          python-version: '3.x'  # Specify a specific Python version
          cache: 'pip'  # Enable pip caching for faster dependency installation
      
      # Install project dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Recommended: use a requirements.txt file
      
      # Ensure url_patterns.json exists
      - name: Prepare URL patterns file
        run: |
          touch url_patterns.json
          [ -s url_patterns.json ] || echo "{}" > url_patterns.json
      
      # Run the scraper with the provided URL
      - name: Scrape and save page
        env:
          TARGET_URL: ${{ github.event.inputs.target_url }}
        run: |
          python scraper.py "$TARGET_URL"
      
      # Commit and push any changes
      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          
          # Ensure pages directory exists
          mkdir -p pages
          
          # Stage relevant files
          git add -f url_patterns.json
          git add -f pages/
          
          # Check for changes and commit if needed
          if [[ -n "$(git status --porcelain)" ]]; then
            git commit -m "Scrape: ${{ github.event.inputs.target_url }}"
            git push
          else
            echo "No changes to commit"
          fi
